// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"demo/config"
	"demo/hander"
	"demo/hander/v1"
	"demo/pkg/log"
	"demo/pkg/store"
	"demo/repo"
	"demo/serve"
	"demo/usecase"
)

// Injectors from wire.go:

func InitializeApp() *App {
	httpServer := serve.NewHttpServer()
	configConfig := config.NewConfig()
	helloHander := V1.NewHelloHander(httpServer)
	baseHandler := hander.NewBaseHandler()
	logger := log.NewLogger(configConfig)
	mySQL := store.NewMySQL(configConfig)
	userRepo := repo.NewUserRepo(logger, configConfig, mySQL)
	userUsecase := usecase.NewUserUsecase(logger, userRepo, configConfig)
	userHander := V1.NewUserHander(httpServer, baseHandler, logger, userUsecase)
	roleRepo := repo.NewRoleRepo(logger, configConfig, mySQL)
	roleUsecase := usecase.NewRoleUsecase(roleRepo)
	roleHander := V1.NewRoleHander(httpServer, logger, baseHandler, roleUsecase)
	handers := &V1.Handers{
		Hello: helloHander,
		User:  userHander,
		Role:  roleHander,
	}
	app := &App{
		Service: httpServer,
		config:  configConfig,
		v1:      handers,
	}
	return app
}

// wire.go:

type App struct {
	Service *serve.HttpServer
	config  *config.Config
	v1      *V1.Handers
}
