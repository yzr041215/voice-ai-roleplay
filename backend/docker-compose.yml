# 追加到原有 services: 层级即可
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: demo
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web 控制台
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - ./data/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M

  # 更新 main：等待 minio 健康 + 注入连接信息
  main:
    image: demo-backend:latest
    container_name: main
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DSN: "root:root@tcp(mysql:3306)/demo?charset=utf8mb4&parseTime=True&loc=Local"
      ServeName: demo
      Port: :8080
      LogLevel: 0
      # MinIO 连接信息
      OSS_BUCKET: mybucket
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_USE_SSL: "false"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M